<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8">
  <title>Nexus Blog Beitrag</title>
  <style>
    body {
      background: #111;
      color: white;
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
    }
    h1 {
      text-align: center;
      color: #0af;
    }
    .category-nav {
      display: flex;
      justify-content: center;
      gap: 20px;
      margin-top: 20px;
      margin-bottom: 30px;
      flex-wrap: wrap;
    }
    .category-btn {
      background: #222;
      padding: 10px 20px;
      border-radius: 20px;
      cursor: pointer;
      border: 2px solid transparent;
      transition: all 0.2s;
    }
    .category-btn:hover, .category-btn.active {
      border-color: #0af;
      background: #0af;
      color: black;
    }
    .terminal {
      display: none;
      background: #222;
      padding: 20px;
      border-radius: 10px;
      margin-bottom: 20px;
    }
    input, textarea, select, button {
      display: block;
      margin-top: 10px;
      width: 100%;
      padding: 10px;
      border-radius: 8px;
      border: none;
      font-size: 16px;
    }
    .category-container {
      display: none;
      flex-wrap: wrap;
      gap: 15px;
    }
    .category-container.active {
      display: flex;
    }
    .post {
      background: #1e1e1e;
      width: 300px;
      padding: 15px;
      border-radius: 10px;
      cursor: pointer;
    }
    .post img {
      width: 100%;
      border-radius: 8px;
      margin-bottom: 10px;
    }
    .views {
      color: #0af;
      font-size: 12px;
      margin-top: 5px;
    }
    .overlay {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0, 0, 0, 0.9);
      display: none;
      align-items: center;
      justify-content: center;
      z-index: 1000;
    }
    .overlay-content {
      background: #222;
      padding: 20px;
      border-radius: 10px;
      max-width: 600px;
      max-height: 80%;
      overflow-y: auto;
    }
    .overlay h3 {
      margin-top: 0;
      color: #0af;
    }
  </style>
</head>
<body>

<h1>Nexus Blog Beitrag</h1>

<div class="category-nav">
  <div class="category-btn active" onclick="showCategory('aktuelles', this)">Aktuelles</div>
  <div class="category-btn" onclick="showCategory('gesellschaft', this)">Gesellschaft</div>
  <div class="category-btn" onclick="showCategory('wissen', this)">Wissen</div>
  <div class="category-btn" onclick="showCategory('berichte', this)">Berichte</div>
</div>

<div class="terminal" id="uploadTerminal">
  <h2>Beitrag hochladen</h2>
  <input id="author" placeholder="Name des Journalisten" />
  <input id="title" placeholder="Titel des Beitrags" />
  <textarea id="content" rows="6" placeholder="Beitrag schreiben..."></textarea>
  <input type="file" id="image" accept="image/*" />
  <select id="category">
    <option value="aktuelles">Aktuelles</option>
    <option value="gesellschaft">Gesellschaft</option>
    <option value="wissen">Wissen</option>
    <option value="berichte">Berichte</option>
  </select>
  <button onclick="uploadPost()">Veröffentlichen</button>
</div>

<div id="aktuelles" class="category-container active"></div>
<div id="gesellschaft" class="category-container"></div>
<div id="wissen" class="category-container"></div>
<div id="berichte" class="category-container"></div>

<div class="overlay" id="overlay" onclick="closeOverlay()">
  <div class="overlay-content" id="overlayContent" onclick="event.stopPropagation()"></div>
</div>

<script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore-compat.js"></script>
<script>
  const firebaseConfig = {
    apiKey: "HIER_EINFUEGEN",
    authDomain: "HIER_EINFUEGEN",
    projectId: "HIER_EINFUEGEN",
    storageBucket: "HIER_EINFUEGEN",
    messagingSenderId: "HIER_EINFUEGEN",
    appId: "HIER_EINFUEGEN"
  };
  firebase.initializeApp(firebaseConfig);
  const db = firebase.firestore();

  let views = {}, viewTimers = {};

  function uploadPost() {
    const author = document.getElementById('author').value.trim();
    const title = document.getElementById('title').value.trim();
    const content = document.getElementById('content').value.trim();
    const category = document.getElementById('category').value;
    const imageFile = document.getElementById('image').files[0];

    if (!title || !content || !author) return alert("Bitte alle Felder ausfüllen.");

    const reader = new FileReader();
    reader.onload = function(e) {
      const imgSrc = imageFile ? e.target.result : "";
      const postData = {
        author, title, content, category,
        image: imgSrc,
        views: 0,
        timestamp: Date.now()
      };
      db.collection("posts").add(postData).then(() => {
        alert("Beitrag hochgeladen!");
        location.reload();
      });
    };
    if (imageFile) reader.readAsDataURL(imageFile);
    else reader.onload();
  }

  window.onload = function () {
    db.collection("posts").orderBy("timestamp", "desc").get().then(snapshot => {
      snapshot.forEach(doc => {
        const post = doc.data();
        const postId = doc.id;
        views[postId] = post.views || 0;

        const postDiv = document.createElement('div');
        postDiv.className = "post";
        postDiv.innerHTML = `
          ${post.image ? `<img src="${post.image}" />` : ""}
          <strong>${post.author}</strong>
          <h3>${post.title}</h3>
          <p>${post.content.substring(0, 100)}...</p>
          <div class="views" id="views-${postId}">Aufrufe: ${views[postId]}</div>
        `;
        postDiv.addEventListener("click", () =>
          showOverlay(post.title, post.content, post.image, post.author, postId));
        postDiv.addEventListener("mouseenter", () => startViewCount(postId));

        document.getElementById(post.category).appendChild(postDiv);
      });
    });
  };

  function startViewCount(id) {
    if (viewTimers[id]) return;
    viewTimers[id] = setTimeout(() => {
      views[id]++;
      document.getElementById(`views-${id}`).textContent = "Aufrufe: " + views[id];
      db.collection("posts").doc(id).update({ views: views[id] });
      clearTimeout(viewTimers[id]);
      viewTimers[id] = null;
    }, 10000);
  }

  function showOverlay(title, content, image, author, id) {
    const overlay = document.getElementById("overlay");
    const contentDiv = document.getElementById("overlayContent");
    contentDiv.innerHTML = `
      ${image ? `<img src="${image}" style="width:100%; border-radius:10px;" /><br><br>` : ""}
      <strong>${author}</strong>
      <h3>${title}</h3>
      <p>${content}</p>
      <div class="views">Aufrufe: ${views[id]}</div>
    `;
    overlay.style.display = "flex";
  }

  function closeOverlay() {
    document.getElementById("overlay").style.display = "none";
  }

  let buffer = '';
  window.addEventListener("keydown", (e) => {
    buffer += e.key.toUpperCase();
    if (buffer.endsWith("ABC")) document.getElementById("uploadTerminal").style.display = "block";
    if (buffer.endsWith("123")) document.getElementById("uploadTerminal").style.display = "none";
    if (buffer.length > 5) buffer = buffer.slice(-5);
  });

  function showCategory(cat, btn) {
    document.querySelectorAll('.category-container').forEach(el => el.classList.remove('active'));
    document.getElementById(cat).classList.add('active');
    document.querySelectorAll('.category-btn').forEach(b => b.classList.remove('active'));
    btn.classList.add('active');
  }
</script>

</body>
</html>
